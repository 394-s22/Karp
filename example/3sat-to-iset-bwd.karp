#lang karp/reduction
 (require "3sat.karp"
          "iset.karp"
          karp/lib/cnf
          karp/lib/graph
          karp/lib/mapping-reduction)
 (provide 3sat->iset-<<-cert)

 (define-backward-certificate-construction
   #:from 3sat #:to iset
   (3sat->iset-<<-cert s->t-constr a-3sat-inst c^iset)

   (define X (vars-of (φ a-3sat-inst)))
   (define X-True
     (for/set {x for [x ∈ X]
                 if (∃ [v in c^iset]
                       (and
                        (positive-literal? (_1s v))
                        (equal? (underlying-var (_1s v)) x)))}))
   (mapping
    [x ∈ X-True] ~> #t
    [x ∈ (set-minus X X-True)] ~> #f))